; ùë¶ ‚â• ùëôùëî^2(ùë†ùëñùëõ (ùë•) + ùëé)
;–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –∑–∞–¥–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ (x, y) —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç
;—É—Å–ª–æ–≤–∏—é ùë¶ ‚â• ùëôùëî^2(ùë†ùëñùëõ (ùë•) + ùëé)
;–ó–∞–º–µ—á–∞–Ω–∏–µ: –ø—Ä–∞–≤–∞—è —á–∞—Å—Ç—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –Ω–∞ ‚Ñù –ø—Ä–∏ ùë• > ùëé.
;–ü–û–õ–ò–ó –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏: ùë• sin a + log2 log2(10) / 2 ^

;–ö–æ–¥ –¥–ª—è x87:

%include "io64.inc"
section .rodata
    a: dd 20.0
    x: dd 30.0
    y: dd 0.1
section .text
    global main
main:
    mov rbp, rsp; for correct debugging st0 = x
    
    fld1
    fld dword[x] 
    fsin
    fld dword[a] 
    fadd

   
    fyl2x
    
    fldl2t
    
    fdiv

    
    fld st0
    
    fmul
    
    fld dword[y]  

    fcomip st0, st1             
   
    jae true_message           

    false_message:
        PRINT_STRING "No"   
    jmp end

    true_message:
        PRINT_STRING "Yes"     

end:
    finit
    ret